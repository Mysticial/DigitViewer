/* u64h16_inverse_convert_Default.ipp
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/20/2011
 * Last Modified    : 01/23/2016
 * 
 */

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include "u64h16_inverse_intrinsics_Default.h"
#include "u64h16_inverse_intrinsics_SSE2.h"
#include "u64h16.h"
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void h16f_to_u64r(const char* T, u64_t* A, upL_t AL){
    const u64_t* stopA = A + AL;

    while (A < stopA - 3){
        u64h16::convert_h16x4_inverse_SSE2(T, A);
        T += 64;
        A += 4;
    }
    while (A < stopA - 1){
        u64h16::convert_h16x2_inverse_SSE2(T, A);
        T += 32;
        A += 2;
    }
    if (A < stopA){
        u64h16::convert_h16x1_inverse_Default(T, A);
        T += 16;
        A += 1;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
