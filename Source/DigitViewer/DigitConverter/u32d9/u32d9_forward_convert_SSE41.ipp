/* u32d9_forward_convert_SSE41.ipp
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/20/2011
 * Last Modified    : 01/23/2016
 * 
 */

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include "u32d9_forward_intrinsics_Default.h"
#include "u32d9_forward_intrinsics_SSE41.h"
#include "u32d9.h"
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void u32r_to_d9r(char* T, const u32_t* A, upL_t AL){
    T += AL * 9;
    const u32_t* stopA = A + AL;

    const upL_t MASK = sizeof(__m128i) - 1;

    //  Align it
    while (A < stopA && ((upL_t)A & MASK)){
        T -= 9;
        u32d9::convert_d9x1_forward_Default(T, *A);
        A += 1;
    }

    stopA -= 3;
    while (A < stopA){
        T -= 36;
        u32d9::convert_d9x4_forward_SSE41(T, A);
        A += 4;
    }
    if (A < stopA + 2){
        T -= 18;
        u32d9::convert_d9x2_forward_Default(T, A);
        A += 2;
    }
    if (A < stopA + 3){
        T -= 9;
        u32d9::convert_d9x1_forward_Default(T, *A);
        A += 1;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
