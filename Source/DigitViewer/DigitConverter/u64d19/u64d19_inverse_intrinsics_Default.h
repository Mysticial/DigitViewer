/* u64d19_inverse_intrinsics_Default.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/19/2011
 * Last Modified    : 01/23/2016
 * 
 */

#ifndef ydv_u64d19_inverse_intrinsics_Default_H
#define ydv_u64d19_inverse_intrinsics_Default_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include "PublicLibs/CompilerSettings.h"
#include "PublicLibs/Types.h"
namespace DigitViewer{
namespace u64d19{
    using namespace ymp;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
YM_FORCE_INLINE void convert_d19x1_inverse_Default(const char str[19], u64_t dec[1]){
    register u32_t a0;
    register u32_t b0;
    register u64_t c0;

    a0 = str[ 0];
    b0 = str[ 8];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 1];
    b0 += str[ 9];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 2];
    b0 += str[10];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 3];
    b0 += str[11];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 4];
    b0 += str[12];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 5];
    b0 += str[13];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 6];
    b0 += str[14];
    a0 *= 10;
    b0 *= 10;
    a0 += str[ 7];
    b0 += str[15];
    c0 = (u64_t)a0 * 100000000 + b0;
    a0 = str[16];
    a0 *= 10;
    a0 += str[17];
    a0 *= 10;
    a0 += str[18];
    c0 *= 1000;
    c0 += a0;
    dec[0] = c0;
}
YM_FORCE_INLINE void convert_d19x2_inverse_Default(const char str[19*2], u64_t dec[2]){
    register u32_t a0, a1;
    register u32_t b0, b1;
    register u64_t c0, c1;

    a0 = str[ 0];
    a1 = str[19];
    b0 = str[ 8];
    b1 = str[27];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 1];
    a1 += str[20];
    b0 += str[ 9];
    b1 += str[28];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 2];
    a1 += str[21];
    b0 += str[10];
    b1 += str[29];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 3];
    a1 += str[22];
    b0 += str[11];
    b1 += str[30];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 4];
    a1 += str[23];
    b0 += str[12];
    b1 += str[31];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 5];
    a1 += str[24];
    b0 += str[13];
    b1 += str[32];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 6];
    a1 += str[25];
    b0 += str[14];
    b1 += str[33];
    a0 *= 10;
    a1 *= 10;
    b0 *= 10;
    b1 *= 10;
    a0 += str[ 7];
    a1 += str[26];
    b0 += str[15];
    b1 += str[34];
    c0 = (u64_t)a0 * 100000000 + b0;
    c1 = (u64_t)a1 * 100000000 + b1;
    a0 = str[16];
    a1 = str[35];
    a0 *= 10;
    a1 *= 10;
    a0 += str[17];
    a1 += str[36];
    a0 *= 10;
    a1 *= 10;
    a0 += str[18];
    a1 += str[37];
    c0 *= 1000;
    c1 *= 1000;
    c0 += a0;
    c1 += a1;
    dec[0] = c0;
    dec[1] = c1;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
}
#endif
