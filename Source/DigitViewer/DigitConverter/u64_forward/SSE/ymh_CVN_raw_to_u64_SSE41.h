/* ymh_CVN_rawh_to_u64_SSE41.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/22/2011
 * Last Modified    : 04/06/2012
 * 
 * 
 *      ymh         =   Helper Function
 *      CVN         =   Format Conversion Unit
 *      rawh_to_r64 =   Hexadecimal Raw -> Binary Integer
 *      SSE41        =   SSE4.1 Instruction Set
 * 
 */

#ifndef _ymh_CVN_rawh_to_u64_SSE41_H
#define _ymh_CVN_rawh_to_u64_SSE41_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "DigitViewer/DigitConverter/ymb_CVN_headers.h"
#include "DigitViewer/DigitConverter/u64_forward/Default/ymi_CVN_rawh_to_ub_Default.h"
#include "DigitViewer/DigitConverter/u64_forward/Default/ymi_CVN_rawd_to_ud_Default.h"
#include "ymi_CVN_rawh_to_ub_SSE2.h"
#include "ymi_CVN_rawd_to_ud_SSE41.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void ymb_CVN_rawh_to_u64b_f(u64_t* T, const char* A, upL_t TL){
    const u64_t* stopT = T + TL;

    while (T < stopT - 3){
        ymi_CVN_rawh_to_u64b_u2_SSE2(T, A);
        A += 64;
        T += 4;
    }
    while (T < stopT - 1){
        ymi_CVN_rawh_to_u64b_u1_SSE2(T, A);
        A += 32;
        T += 2;
    }
    if (T < stopT){
        ymi_CVN_rawh_to_u64b_u0_Default(T, A);
        A += 16;
        T += 1;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void ymb_CVN_rawd_to_u64d_f(u64_t* T, const char* A, upL_t TL){
    const u64_t* stopT = T + TL;
    
    while (T < stopT - 3){
        ymi_CVN_rawd_to_u64d19_u2_SSE41(T, A);
        A += 76;
        T += 4;
    }
    if (T < stopT - 1){
        ymi_CVN_rawd_to_u64d19_u1_SSE41(T, A);
        A += 38;
        T += 2;
    }
    if (T < stopT){
        ymi_CVN_rawd_to_u64d19_u0_Default(T, A);
        A += 19;
        T += 1;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#endif
