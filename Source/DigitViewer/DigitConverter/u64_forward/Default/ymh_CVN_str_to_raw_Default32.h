/* ymi_CVN_str_to_raw_Default32.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/30/2011
 * Last Modified    : 04/06/2012
 * 
 * 
 *      ymi             =   Micro-Intrinsic
 *      CVN             =   Format Conversion Unit
 *      str_to_raw      =   String -> Raw
 *      Default         =   Default Instruction Set
 * 
 */

#ifndef _ymh_CVN_str_to_raw_Default32_H
#define _ymh_CVN_str_to_raw_Default32_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "DigitViewer/DigitConverter/ymb_CVN_headers.h"
#include "ymi_CVN_strh_to_rawh_Default.h"
#include "ymi_CVN_strd_to_rawd_Default.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int ymb_CVN_strh_to_rawh_f(char* T, upL_t L){
    char* stop = T + L;

    u32_t bad = 0;
    //while (T < stop - 15){
    //    ymi_CVN_strh_to_rawh_u4_Default32(T, bad);
    //    T += 16;
    //}
    //while (T < stop - 7){
    //    ymi_CVN_strh_to_rawh_u3_Default32(T, bad);
    //    T += 8;
    //}
    while (T < stop - 3){
        ymi_CVN_strh_to_rawh_u2_Default32(T, bad);
        T += 4;
    }
    while (T < stop){
        ymi_CVN_strh_to_rawh_u0_Default(T, bad);
        T += 1;
    }

    return bad == 0 ? 0 : 1;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int ymb_CVN_strd_to_rawd_f(char* T, upL_t L){
    char* stop = T + L;

    u32_t bad = 0;
    while (T < stop - 15){
        ymi_CVN_strd_to_rawd_u4_Default32(T, bad);
        T += 16;
    }
    while (T < stop - 7){
        ymi_CVN_strd_to_rawd_u3_Default32(T, bad);
        T += 8;
    }
    while (T < stop - 3){
        ymi_CVN_strd_to_rawd_u2_Default32(T, bad);
        T += 4;
    }
    while (T < stop){
        ymi_CVN_strd_to_rawd_u0_Default(T, bad);
        T += 1;
    }

    return bad == 0 ? 0 : 1;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#endif
