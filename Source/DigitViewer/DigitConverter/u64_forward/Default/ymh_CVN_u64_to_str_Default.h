/* ymi_CVN_u64_to_str_Default.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/22/2011
 * Last Modified    : 04/07/2012
 * 
 * 
 *      ymi         =   Micro-Intrinsic
 *      CVN         =   Format Conversion Unit
 *      u64_to_str  =   Binary Integer -> String
 *      Default     =   Default Instruction Set
 * 
 */

#ifndef _ymh_CVN_u64_to_str_Default_H
#define _ymh_CVN_u64_to_str_Default_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "DigitViewer/DigitConverter/ymb_CVN_headers.h"
#include "ymi_CVN_u64b_to_strh_Default.h"
#include "ymi_CVN_u64d_to_strd_Default.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void ymb_CVN_u64b_to_strh_f(char* T, const u64_t* A, upL_t AL){
    const u64_t* stopA = A + AL;

    while (A < stopA){
        ymi_CVN_u64b_to_strh_u0_Default(T, A);
        A += 1;
        T += 16;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void ymb_CVN_u64d_to_strd_f(char* T, const u64_t* A, upL_t AL){
    const u64_t* stopA = A + AL;

    while (A < stopA - 1){
        ymi_CVN_u64d19_to_strd_u1_Default(T, A);
        A += 2;
        T += 38;
    }
    if (A < stopA){
        ymi_CVN_u64d19_to_strd_u0_Default(T, A);
        A += 1;
        T += 19;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#endif
