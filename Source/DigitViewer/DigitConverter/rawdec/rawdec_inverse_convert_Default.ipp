/* rawdec_inverse_convert_Default.ipp
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/30/2011
 * Last Modified    : 01/24/2016
 * 
 */

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include "rawdec_inverse_intrinsics_Default.h"
#include "rawdec.h"
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
bool dec_to_raw(char* T, upL_t L){
    char* stop = T + L;
    u32_t bad = 0;

    //  Iterate until T is aligned.
    while  (T < stop && ((upL_t)T & 3)){
        bad |= rawdec::convert_dec1_inverse_Default(T);
        T += 1;
    }

    //  Proceed at full speed.
    while (T < stop - 7){
        bad |= rawdec::convert_dec8_inverse_Default32(T);
        T += 8;
    }
    while (T < stop - 3){
        bad |= rawdec::convert_dec4_inverse_Default32(T);
        T += 4;
    }
    while (T < stop){
        bad |= rawdec::convert_dec1_inverse_Default(T);
        T += 1;
    }

    return bad != 0;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
