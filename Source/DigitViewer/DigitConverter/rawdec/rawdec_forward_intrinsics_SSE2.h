/* rawdec_forward_intrinsics_SSE2.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 04/04/2012
 * Last Modified    : 01/24/2016
 * 
 */

#ifndef ydv_rawdec_forward_intrinsics_SSE2_H
#define ydv_rawdec_forward_intrinsics_SSE2_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include <emmintrin.h>
#include "PublicLibs/CompilerSettings.h"
#include "PublicLibs/Types.h"
namespace DigitViewer{
namespace rawdec{
    using namespace ymp;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
YM_FORCE_INLINE void convert_dec16_forward_SSE2(char str[16]){
    const __m128i LIMIT = _mm_set1_epi8('0');

    __m128i* T = (__m128i*)str;
    __m128i a0;

    a0 = _mm_add_epi8(T[0], LIMIT);

    T[0] = a0;
}
YM_FORCE_INLINE void convert_dec32_forward_SSE2(char str[32]){
    const __m128i LIMIT = _mm_set1_epi8('0');

    __m128i* T = (__m128i*)str;
    __m128i a0, a1;

    a0 = _mm_add_epi8(T[0], LIMIT);
    a1 = _mm_add_epi8(T[1], LIMIT);

    T[0] = a0;
    T[1] = a1;
}
YM_FORCE_INLINE void convert_dec64_forward_SSE2(char str[64]){
    const __m128i LIMIT = _mm_set1_epi8('0');

    __m128i* T = (__m128i*)str;
    __m128i a0, a1, a2, a3;

    a0 = _mm_add_epi8(T[0], LIMIT);
    a1 = _mm_add_epi8(T[1], LIMIT);
    a2 = _mm_add_epi8(T[2], LIMIT);
    a3 = _mm_add_epi8(T[3], LIMIT);

    T[0] = a0;
    T[1] = a1;
    T[2] = a2;
    T[3] = a3;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
}
#endif
