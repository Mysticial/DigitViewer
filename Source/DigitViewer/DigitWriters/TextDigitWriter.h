/* TextDigitWriter.h - .txt Writer Object
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 07/25/2013
 * Last Modified    : 07/25/2013
 * 
 */

#pragma once
#ifndef ydv_DigitViewer_TextWriter_H
#define ydv_DigitViewer_TextWriter_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "PublicLibs/SystemLibs/FileIO/BasicFile.h"
#include "DigitWriter.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
class TextWriter : public DigitWriter{
public:
    virtual ~TextWriter();
    virtual std::unique_ptr<DigitReader> close_and_get_reader() override;

    //  Create a new writer.
    //  If "first_digits" is not an empty string, all digits before the first
    //  decimal place will be written to the start of the file.
    //  For ASCII char input, use:   raw = false
    //  For raw integer input, use:  raw = true
    TextWriter(
        const std::string& path,    //  UTF-8
        const std::string& first_digits = "",
        bool raw = false,
        int radix = 10
    );

    virtual void write(char* str, upL_t digits) override;

private:
    const int m_radix;

    //  File handle
    FileIO::BasicFile m_file;

    //  Function pointer for digit conversion.
    void (*fp_convert)(char*, upL_t);
};
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
#endif
