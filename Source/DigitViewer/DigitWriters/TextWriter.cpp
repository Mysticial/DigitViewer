/* TextWriter.cpp
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 07/26/2013
 * Last Modified    : 07/26/2013
 * 
 */

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include "PublicLibs/Exception.h"
#include "DigitViewer/DigitConverter/ymb_CVN_headers.h"
#include "DigitViewer/Globals.h"
#include "TextWriter.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
namespace DigitViewer{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Constructors
TextWriter::TextWriter(
    const std::wstring& path,
    const std::string& first_digits,
    bool raw,
    int radix
)
    : file(0, path.c_str())
    , fp_convert(NULL)
{
    //  Write the first digits.
    if (first_digits.size() != 0){
        upL_t decimal_offset = first_digits.find('.');
        if (decimal_offset == std::string::npos)
            throw ym_exception("No decimal place was found.", YCR_DIO_ERROR_INVALID_PARAMETERS);
        file.write(first_digits.c_str(), decimal_offset + 1);
    }

    if (raw){
        switch (radix){
            case 10:
                fp_convert = ymb_CVN_rawd_to_strd_f;
                break;
            case 16:
                fp_convert = ymb_CVN_rawh_to_strh_f;
                break;
            default:
                throw ym_exception("Unsupported Radix", YCR_DIO_ERROR_INVALID_BASE);
        }
    }
}
TextWriter::~TextWriter(){
    flush();
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void TextWriter::write(char* str, upL_t digits){
    //  If the buffer isn't empty and "str" isn't the buffer itself, then we
    //  must flush the buffer first.
    if (iter_b_offset != 0 && str != buffer){
        flush();
    }

    //  If the input isn't raw, convert it.
    if (fp_convert != NULL)
        fp_convert(str, digits);

    //  Write to disk.
    if (file.write(str, digits) != digits){
        FileIO::PrintLastError();
        throw ym_exception(
            "Error writing to file.",
            file.GetPath(),
            FileIO::GetLastErrorCode()
        );
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
